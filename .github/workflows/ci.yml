# .github\workflows\ci.yml

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  affected:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # CACHE NODE_MODULES
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # CACHE PRISMA ENGINES & GENERATED CLIENT
      - name: Cache Prisma artifacts
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules/.prisma
            **/prisma/generated
          key: ${{ runner.os }}-prisma-${{ hashFiles('**/prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Install dependencies
        run: npm ci

      # Setup DBs (one-time, not per service)
      - name: Create test databases
        run: |
          mysql -h 127.0.0.1 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS nihil_user_test;"
          mysql -h 127.0.0.1 -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS nihil_post_test;"

      # Copy envs for all known services (adjust if you add more)
      - name: Copy .env.sample to .env
        run: |
          cp -n user/.env.sample user/.env || true
          cp -n post/.env.sample post/.env || true

      # Add DB URLs if needed
      - name: Set test DB URLs
        run: |
          echo "USER_DATABASE_URL=mysql://root:password@127.0.0.1:3306/nihil_user_test" >> user/.env
          echo "POST_DATABASE_URL=mysql://root:password@127.0.0.1:3306/nihil_post_test" >> post/.env

      # Lint only affected
      - name: Lint affected
        run: npx nx affected --target=lint --parallel=3 --base=origin/${{ github.event.pull_request.base.ref || 'main' }} --head=HEAD

      # Build only affected
      - name: Check TypeScript version
        run: npx tsc --version
      - name: Clean all build outputs
        run: rm -rf shared/dist shared/.tsbuildinfo user/dist user/.tsbuildinfo post/dist post/.tsbuildinfo
      - name: Build affected (shared, user, post)
        run: npx nx affected --target=build --parallel=3 --base=origin/${{ github.event.pull_request.base.ref || 'main' }} --head=HEAD
      - name: Debug shared output
        run: ls -lh shared/dist

      # Push schemas for affected Prisma projects
      - name: Push schemas for affected projects
        run: npx nx affected --target=prisma:db:push --parallel=3 --base=origin/${{ github.event.pull_request.base.ref || 'main' }} --head=HEAD

      # Test only affected
      - name: Test affected
        run: npx nx affected --target=test --parallel=3 --base=origin/${{ github.event.pull_request.base.ref || 'main' }} --head=HEAD
